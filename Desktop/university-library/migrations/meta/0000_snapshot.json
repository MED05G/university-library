{
  "id": "ea095961-42ef-4d68-ac56-4ce8357a717b",
  "prevId": "00000000-0000-0000-0000-000000000000",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.audit_log": {
      "name": "audit_log",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "table_name": {
          "name": "table_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "record_id": {
          "name": "record_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "action": {
          "name": "action",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "old_values": {
          "name": "old_values",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "new_values": {
          "name": "new_values",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "timestamp": {
          "name": "timestamp",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "ip_address": {
          "name": "ip_address",
          "type": "inet",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "idx_audit_log_table_record": {
          "name": "idx_audit_log_table_record",
          "columns": [
            {
              "expression": "table_name",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "record_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_audit_log_user": {
          "name": "idx_audit_log_user",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"audit_log\".\"user_id\" IS NOT NULL",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_audit_log_timestamp": {
          "name": "idx_audit_log_timestamp",
          "columns": [
            {
              "expression": "timestamp",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "audit_log_user_id_users_id_fk": {
          "name": "audit_log_user_id_users_id_fk",
          "tableFrom": "audit_log",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "audit_log_id_unique": {
          "name": "audit_log_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {
        "chk_audit_action": {
          "name": "chk_audit_action",
          "value": "\"audit_log\".\"action\" IN ('INSERT', 'UPDATE', 'DELETE')"
        },
        "chk_audit_action_values": {
          "name": "chk_audit_action_values",
          "value": "\n    (\"audit_log\".\"action\" = 'INSERT' AND \"audit_log\".\"old_values\" IS NULL AND \"audit_log\".\"new_values\" IS NOT NULL) OR\n    (\"audit_log\".\"action\" = 'UPDATE' AND \"audit_log\".\"old_values\" IS NOT NULL AND \"audit_log\".\"new_values\" IS NOT NULL) OR\n    (\"audit_log\".\"action\" = 'DELETE' AND \"audit_log\".\"old_values\" IS NOT NULL AND \"audit_log\".\"new_values\" IS NULL)\n  "
        }
      },
      "isRLSEnabled": false
    },
    "public.authors": {
      "name": "authors",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "full_name": {
          "name": "full_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "birth_date": {
          "name": "birth_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "death_date": {
          "name": "death_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "nationality": {
          "name": "nationality",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "biography": {
          "name": "biography",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_authors_name": {
          "name": "idx_authors_name",
          "columns": [
            {
              "expression": "to_tsvector('english', \"full_name\")",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gin",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "authors_id_unique": {
          "name": "authors_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {
        "chk_authors_dates": {
          "name": "chk_authors_dates",
          "value": "\"authors\".\"death_date\" IS NULL OR \"authors\".\"death_date\" >= \"authors\".\"birth_date\""
        },
        "chk_authors_birth_date": {
          "name": "chk_authors_birth_date",
          "value": "\"authors\".\"birth_date\" IS NULL OR \"authors\".\"birth_date\" <= CURRENT_DATE"
        }
      },
      "isRLSEnabled": false
    },
    "public.book_authors": {
      "name": "book_authors",
      "schema": "",
      "columns": {
        "book_id": {
          "name": "book_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "author_id": {
          "name": "author_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "author_order": {
          "name": "author_order",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 1
        }
      },
      "indexes": {
        "idx_book_authors_book": {
          "name": "idx_book_authors_book",
          "columns": [
            {
              "expression": "book_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_book_authors_author": {
          "name": "idx_book_authors_author",
          "columns": [
            {
              "expression": "author_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "book_authors_book_id_books_id_fk": {
          "name": "book_authors_book_id_books_id_fk",
          "tableFrom": "book_authors",
          "tableTo": "books",
          "columnsFrom": [
            "book_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "book_authors_author_id_authors_id_fk": {
          "name": "book_authors_author_id_authors_id_fk",
          "tableFrom": "book_authors",
          "tableTo": "authors",
          "columnsFrom": [
            "author_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "book_authors_book_id_author_id_pk": {
          "name": "book_authors_book_id_author_id_pk",
          "columns": [
            "book_id",
            "author_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "chk_book_authors_order": {
          "name": "chk_book_authors_order",
          "value": "\"book_authors\".\"author_order\" > 0"
        }
      },
      "isRLSEnabled": false
    },
    "public.book_copies": {
      "name": "book_copies",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "book_id": {
          "name": "book_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "copy_number": {
          "name": "copy_number",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "barcode": {
          "name": "barcode",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'available'"
        },
        "condition_rating": {
          "name": "condition_rating",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'good'"
        },
        "acquired_date": {
          "name": "acquired_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false,
          "default": "CURRENT_DATE"
        },
        "last_maintenance": {
          "name": "last_maintenance",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "is_deleted": {
          "name": "is_deleted",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        }
      },
      "indexes": {
        "idx_book_copies_book": {
          "name": "idx_book_copies_book",
          "columns": [
            {
              "expression": "book_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_book_copies_status": {
          "name": "idx_book_copies_status",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_book_copies_barcode": {
          "name": "idx_book_copies_barcode",
          "columns": [
            {
              "expression": "barcode",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"book_copies\".\"barcode\" IS NOT NULL",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_book_copies_available": {
          "name": "idx_book_copies_available",
          "columns": [
            {
              "expression": "book_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"book_copies\".\"status\" = 'available' AND \"book_copies\".\"is_deleted\" = FALSE",
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "book_copies_book_id_books_id_fk": {
          "name": "book_copies_book_id_books_id_fk",
          "tableFrom": "book_copies",
          "tableTo": "books",
          "columnsFrom": [
            "book_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "book_copies_id_unique": {
          "name": "book_copies_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        },
        "book_copies_barcode_unique": {
          "name": "book_copies_barcode_unique",
          "nullsNotDistinct": false,
          "columns": [
            "barcode"
          ]
        },
        "unique_book_copy_number": {
          "name": "unique_book_copy_number",
          "nullsNotDistinct": false,
          "columns": [
            "book_id",
            "copy_number"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {
        "chk_book_copies_status": {
          "name": "chk_book_copies_status",
          "value": "\"book_copies\".\"status\" IN ('available', 'borrowed', 'reserved', 'maintenance', 'lost', 'damaged', 'withdrawn')"
        },
        "chk_book_copies_condition": {
          "name": "chk_book_copies_condition",
          "value": "\"book_copies\".\"condition_rating\" IN ('excellent', 'good', 'fair', 'poor', 'damaged')"
        },
        "chk_book_copies_acquired_date": {
          "name": "chk_book_copies_acquired_date",
          "value": "\"book_copies\".\"acquired_date\" <= CURRENT_DATE"
        },
        "chk_book_copies_maintenance_date": {
          "name": "chk_book_copies_maintenance_date",
          "value": "\"book_copies\".\"last_maintenance\" IS NULL OR \"book_copies\".\"last_maintenance\" <= CURRENT_DATE"
        }
      },
      "isRLSEnabled": false
    },
    "public.book_subjects": {
      "name": "book_subjects",
      "schema": "",
      "columns": {
        "book_id": {
          "name": "book_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "subject_id": {
          "name": "subject_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "idx_book_subjects_book": {
          "name": "idx_book_subjects_book",
          "columns": [
            {
              "expression": "book_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_book_subjects_subject": {
          "name": "idx_book_subjects_subject",
          "columns": [
            {
              "expression": "subject_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "book_subjects_book_id_books_id_fk": {
          "name": "book_subjects_book_id_books_id_fk",
          "tableFrom": "book_subjects",
          "tableTo": "books",
          "columnsFrom": [
            "book_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "book_subjects_subject_id_subjects_id_fk": {
          "name": "book_subjects_subject_id_subjects_id_fk",
          "tableFrom": "book_subjects",
          "tableTo": "subjects",
          "columnsFrom": [
            "subject_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "book_subjects_book_id_subject_id_pk": {
          "name": "book_subjects_book_id_subject_id_pk",
          "columns": [
            "book_id",
            "subject_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.books": {
      "name": "books",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "subtitle": {
          "name": "subtitle",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "isbn_13": {
          "name": "isbn_13",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "isbn_10": {
          "name": "isbn_10",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "publisher_id": {
          "name": "publisher_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "publication_year": {
          "name": "publication_year",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "edition": {
          "name": "edition",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "pages": {
          "name": "pages",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "language": {
          "name": "language",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'English'"
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "shelf_location": {
          "name": "shelf_location",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "acquisition_date": {
          "name": "acquisition_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false,
          "default": "CURRENT_DATE"
        },
        "acquisition_price": {
          "name": "acquisition_price",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "total_copies": {
          "name": "total_copies",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "available_copies": {
          "name": "available_copies",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "is_deleted": {
          "name": "is_deleted",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "cover_url": {
          "name": "cover_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "video_url": {
          "name": "video_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "cover_color": {
          "name": "cover_color",
          "type": "varchar(7)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "idx_books_title": {
          "name": "idx_books_title",
          "columns": [
            {
              "expression": "to_tsvector('english', \"title\")",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gin",
          "with": {}
        },
        "idx_books_author_title": {
          "name": "idx_books_author_title",
          "columns": [
            {
              "expression": "to_tsvector('english', \"title\" || ' ' || COALESCE(\"subtitle\", ''))",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gin",
          "with": {}
        },
        "idx_books_isbn13": {
          "name": "idx_books_isbn13",
          "columns": [
            {
              "expression": "isbn_13",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"books\".\"isbn_13\" IS NOT NULL",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_books_isbn10": {
          "name": "idx_books_isbn10",
          "columns": [
            {
              "expression": "isbn_10",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"books\".\"isbn_10\" IS NOT NULL",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_books_publisher": {
          "name": "idx_books_publisher",
          "columns": [
            {
              "expression": "publisher_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_books_year": {
          "name": "idx_books_year",
          "columns": [
            {
              "expression": "publication_year",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_books_available": {
          "name": "idx_books_available",
          "columns": [
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"books\".\"available_copies\" > 0 AND \"books\".\"is_deleted\" = FALSE",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_books_shelf": {
          "name": "idx_books_shelf",
          "columns": [
            {
              "expression": "shelf_location",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "books_publisher_id_publishers_id_fk": {
          "name": "books_publisher_id_publishers_id_fk",
          "tableFrom": "books",
          "tableTo": "publishers",
          "columnsFrom": [
            "publisher_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "books_id_unique": {
          "name": "books_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        },
        "books_isbn_13_unique": {
          "name": "books_isbn_13_unique",
          "nullsNotDistinct": false,
          "columns": [
            "isbn_13"
          ]
        },
        "books_isbn_10_unique": {
          "name": "books_isbn_10_unique",
          "nullsNotDistinct": false,
          "columns": [
            "isbn_10"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {
        "chk_books_year": {
          "name": "chk_books_year",
          "value": "\"books\".\"publication_year\" BETWEEN 1400 AND EXTRACT(YEAR FROM NOW()) + 1"
        },
        "chk_books_pages": {
          "name": "chk_books_pages",
          "value": "\"books\".\"pages\" IS NULL OR \"books\".\"pages\" > 0"
        },
        "chk_books_copies": {
          "name": "chk_books_copies",
          "value": "\"books\".\"total_copies\" >= 0 AND \"books\".\"available_copies\" >= 0 AND \"books\".\"available_copies\" <= \"books\".\"total_copies\""
        },
        "chk_books_isbn13": {
          "name": "chk_books_isbn13",
          "value": "\"books\".\"isbn_13\" IS NULL OR (LENGTH(\"books\".\"isbn_13\") = 13 AND \"books\".\"isbn_13\" ~ '^[0-9]{13}$')"
        },
        "chk_books_isbn10": {
          "name": "chk_books_isbn10",
          "value": "\"books\".\"isbn_10\" IS NULL OR (LENGTH(\"books\".\"isbn_10\") = 10 AND \"books\".\"isbn_10\" ~ '^[0-9]{9}[0-9X]$')"
        },
        "chk_books_price": {
          "name": "chk_books_price",
          "value": "\"books\".\"acquisition_price\" IS NULL OR \"books\".\"acquisition_price\" >= 0"
        },
        "chk_books_acquisition_date": {
          "name": "chk_books_acquisition_date",
          "value": "\"books\".\"acquisition_date\" <= CURRENT_DATE"
        }
      },
      "isRLSEnabled": false
    },
    "public.borrow_requests": {
      "name": "borrow_requests",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "book_copy_id": {
          "name": "book_copy_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "librarian_id": {
          "name": "librarian_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "request_date": {
          "name": "request_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "approved_date": {
          "name": "approved_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "due_date": {
          "name": "due_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "return_date": {
          "name": "return_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "rejection_reason": {
          "name": "rejection_reason",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "renewal_count": {
          "name": "renewal_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "max_renewals": {
          "name": "max_renewals",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 2
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "last_activity_date": {
          "name": "last_activity_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_borrow_requests_user": {
          "name": "idx_borrow_requests_user",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_borrow_requests_copy": {
          "name": "idx_borrow_requests_copy",
          "columns": [
            {
              "expression": "book_copy_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_borrow_requests_status": {
          "name": "idx_borrow_requests_status",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_borrow_requests_due_date": {
          "name": "idx_borrow_requests_due_date",
          "columns": [
            {
              "expression": "due_date",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"borrow_requests\".\"due_date\" IS NOT NULL",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_borrow_requests_overdue": {
          "name": "idx_borrow_requests_overdue",
          "columns": [
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"borrow_requests\".\"status\" = 'overdue'",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_borrow_requests_active": {
          "name": "idx_borrow_requests_active",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"borrow_requests\".\"status\" IN ('approved', 'overdue')",
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "borrow_requests_user_id_users_id_fk": {
          "name": "borrow_requests_user_id_users_id_fk",
          "tableFrom": "borrow_requests",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "borrow_requests_book_copy_id_book_copies_id_fk": {
          "name": "borrow_requests_book_copy_id_book_copies_id_fk",
          "tableFrom": "borrow_requests",
          "tableTo": "book_copies",
          "columnsFrom": [
            "book_copy_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "borrow_requests_librarian_id_users_id_fk": {
          "name": "borrow_requests_librarian_id_users_id_fk",
          "tableFrom": "borrow_requests",
          "tableTo": "users",
          "columnsFrom": [
            "librarian_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "borrow_requests_id_unique": {
          "name": "borrow_requests_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {
        "chk_borrow_status": {
          "name": "chk_borrow_status",
          "value": "\"borrow_requests\".\"status\" IN ('pending', 'approved', 'rejected', 'returned', 'overdue', 'lost')"
        },
        "chk_borrow_dates": {
          "name": "chk_borrow_dates",
          "value": "\n    (\"borrow_requests\".\"approved_date\" IS NULL OR \"borrow_requests\".\"approved_date\" >= \"borrow_requests\".\"request_date\") AND\n    (\"borrow_requests\".\"due_date\" IS NULL OR \"borrow_requests\".\"due_date\" > \"borrow_requests\".\"approved_date\") AND\n    (\"borrow_requests\".\"return_date\" IS NULL OR \"borrow_requests\".\"return_date\" >= \"borrow_requests\".\"approved_date\")\n  "
        },
        "chk_renewal_count": {
          "name": "chk_renewal_count",
          "value": "\"borrow_requests\".\"renewal_count\" >= 0 AND \"borrow_requests\".\"renewal_count\" <= \"borrow_requests\".\"max_renewals\""
        },
        "chk_borrow_rejection": {
          "name": "chk_borrow_rejection",
          "value": "\n    (\"borrow_requests\".\"status\" = 'rejected' AND \"borrow_requests\".\"rejection_reason\" IS NOT NULL) OR\n    \"borrow_requests\".\"status\" != 'rejected'\n  "
        },
        "chk_borrow_approval": {
          "name": "chk_borrow_approval",
          "value": "\n    (\"borrow_requests\".\"status\" IN ('approved', 'returned', 'overdue', 'lost') AND \"borrow_requests\".\"approved_date\" IS NOT NULL AND \"borrow_requests\".\"due_date\" IS NOT NULL) OR\n    \"borrow_requests\".\"status\" IN ('pending', 'rejected')\n  "
        }
      },
      "isRLSEnabled": false
    },
    "public.departments": {
      "name": "departments",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "code": {
          "name": "code",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "departments_id_unique": {
          "name": "departments_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        },
        "departments_name_unique": {
          "name": "departments_name_unique",
          "nullsNotDistinct": false,
          "columns": [
            "name"
          ]
        },
        "departments_code_unique": {
          "name": "departments_code_unique",
          "nullsNotDistinct": false,
          "columns": [
            "code"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.fines": {
      "name": "fines",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "borrow_request_id": {
          "name": "borrow_request_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "waived_by": {
          "name": "waived_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "fine_type": {
          "name": "fine_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "amount": {
          "name": "amount",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "days_overdue": {
          "name": "days_overdue",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "fine_date": {
          "name": "fine_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "due_date": {
          "name": "due_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "paid_date": {
          "name": "paid_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "payment_method": {
          "name": "payment_method",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "waived_reason": {
          "name": "waived_reason",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'unpaid'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_fines_user": {
          "name": "idx_fines_user",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_fines_status": {
          "name": "idx_fines_status",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_fines_user_status": {
          "name": "idx_fines_user_status",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_fines_due_date": {
          "name": "idx_fines_due_date",
          "columns": [
            {
              "expression": "due_date",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"fines\".\"due_date\" IS NOT NULL AND \"fines\".\"status\" = 'unpaid'",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_fines_borrow_request": {
          "name": "idx_fines_borrow_request",
          "columns": [
            {
              "expression": "borrow_request_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"fines\".\"borrow_request_id\" IS NOT NULL",
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "fines_user_id_users_id_fk": {
          "name": "fines_user_id_users_id_fk",
          "tableFrom": "fines",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "fines_borrow_request_id_borrow_requests_id_fk": {
          "name": "fines_borrow_request_id_borrow_requests_id_fk",
          "tableFrom": "fines",
          "tableTo": "borrow_requests",
          "columnsFrom": [
            "borrow_request_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "fines_waived_by_users_id_fk": {
          "name": "fines_waived_by_users_id_fk",
          "tableFrom": "fines",
          "tableTo": "users",
          "columnsFrom": [
            "waived_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "fines_id_unique": {
          "name": "fines_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {
        "chk_fine_type": {
          "name": "chk_fine_type",
          "value": "\"fines\".\"fine_type\" IN ('overdue', 'lost_book', 'damaged_book', 'processing_fee', 'other')"
        },
        "chk_fine_status": {
          "name": "chk_fine_status",
          "value": "\"fines\".\"status\" IN ('unpaid', 'paid', 'waived', 'disputed')"
        },
        "chk_payment_method": {
          "name": "chk_payment_method",
          "value": "\"fines\".\"payment_method\" IN ('cash', 'card', 'online', 'waived')"
        },
        "chk_fine_amount": {
          "name": "chk_fine_amount",
          "value": "\"fines\".\"amount\" >= 0"
        },
        "chk_fine_days": {
          "name": "chk_fine_days",
          "value": "\"fines\".\"days_overdue\" IS NULL OR \"fines\".\"days_overdue\" >= 0"
        },
        "chk_fine_payment": {
          "name": "chk_fine_payment",
          "value": "\n    (\"fines\".\"status\" = 'paid' AND \"fines\".\"paid_date\" IS NOT NULL) OR \n    (\"fines\".\"status\" = 'waived' AND \"fines\".\"waived_by\" IS NOT NULL AND \"fines\".\"waived_reason\" IS NOT NULL) OR \n    \"fines\".\"status\" IN ('unpaid', 'disputed')\n  "
        },
        "chk_fine_due_date": {
          "name": "chk_fine_due_date",
          "value": "\"fines\".\"due_date\" IS NULL OR \"fines\".\"due_date\" >= \"fines\".\"fine_date\""
        }
      },
      "isRLSEnabled": false
    },
    "public.notifications": {
      "name": "notifications",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "message": {
          "name": "message",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "is_read": {
          "name": "is_read",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "email_sent": {
          "name": "email_sent",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "sms_sent": {
          "name": "sms_sent",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "read_at": {
          "name": "read_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "idx_notifications_user": {
          "name": "idx_notifications_user",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_notifications_user_read": {
          "name": "idx_notifications_user_read",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "is_read",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_notifications_type": {
          "name": "idx_notifications_type",
          "columns": [
            {
              "expression": "type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_notifications_unread": {
          "name": "idx_notifications_unread",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"notifications\".\"is_read\" = FALSE",
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "notifications_user_id_users_id_fk": {
          "name": "notifications_user_id_users_id_fk",
          "tableFrom": "notifications",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "notifications_id_unique": {
          "name": "notifications_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {
        "chk_notification_type": {
          "name": "chk_notification_type",
          "value": "\"notifications\".\"type\" IN ('due_reminder', 'overdue_notice', 'reservation_ready', 'fine_notice', 'account_status', 'general')"
        },
        "chk_notification_read": {
          "name": "chk_notification_read",
          "value": "\n    (\"notifications\".\"is_read\" = FALSE AND \"notifications\".\"read_at\" IS NULL) OR \n    (\"notifications\".\"is_read\" = TRUE AND \"notifications\".\"read_at\" IS NOT NULL)\n  "
        }
      },
      "isRLSEnabled": false
    },
    "public.publishers": {
      "name": "publishers",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "city": {
          "name": "city",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "country": {
          "name": "country",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "website": {
          "name": "website",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "established_year": {
          "name": "established_year",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_publishers_name": {
          "name": "idx_publishers_name",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "publishers_id_unique": {
          "name": "publishers_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        },
        "publishers_name_unique": {
          "name": "publishers_name_unique",
          "nullsNotDistinct": false,
          "columns": [
            "name"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {
        "chk_publishers_year": {
          "name": "chk_publishers_year",
          "value": "\"publishers\".\"established_year\" IS NULL OR \"publishers\".\"established_year\" BETWEEN 1400 AND EXTRACT(YEAR FROM NOW())"
        },
        "chk_publishers_website": {
          "name": "chk_publishers_website",
          "value": "\"publishers\".\"website\" IS NULL OR \"publishers\".\"website\" ~* '^https?://.+'"
        }
      },
      "isRLSEnabled": false
    },
    "public.reservations": {
      "name": "reservations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "book_id": {
          "name": "book_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "reservation_date": {
          "name": "reservation_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "expiry_date": {
          "name": "expiry_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "queue_position": {
          "name": "queue_position",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'active'"
        },
        "notification_sent": {
          "name": "notification_sent",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_reservations_user": {
          "name": "idx_reservations_user",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_reservations_book": {
          "name": "idx_reservations_book",
          "columns": [
            {
              "expression": "book_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_reservations_user_book": {
          "name": "idx_reservations_user_book",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "book_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_reservations_status": {
          "name": "idx_reservations_status",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_reservations_queue": {
          "name": "idx_reservations_queue",
          "columns": [
            {
              "expression": "book_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "queue_position",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"reservations\".\"status\" = 'active'",
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "reservations_user_id_users_id_fk": {
          "name": "reservations_user_id_users_id_fk",
          "tableFrom": "reservations",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "reservations_book_id_books_id_fk": {
          "name": "reservations_book_id_books_id_fk",
          "tableFrom": "reservations",
          "tableTo": "books",
          "columnsFrom": [
            "book_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "reservations_id_unique": {
          "name": "reservations_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        },
        "unique_user_book_reservation": {
          "name": "unique_user_book_reservation",
          "nullsNotDistinct": false,
          "columns": [
            "user_id",
            "book_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {
        "chk_reservation_status": {
          "name": "chk_reservation_status",
          "value": "\"reservations\".\"status\" IN ('active', 'fulfilled', 'expired', 'cancelled')"
        },
        "chk_reservation_dates": {
          "name": "chk_reservation_dates",
          "value": "\"reservations\".\"expiry_date\" IS NULL OR \"reservations\".\"expiry_date\" > \"reservations\".\"reservation_date\""
        },
        "chk_queue_position": {
          "name": "chk_queue_position",
          "value": "\"reservations\".\"queue_position\" > 0"
        }
      },
      "isRLSEnabled": false
    },
    "public.subjects": {
      "name": "subjects",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "parent_subject_id": {
          "name": "parent_subject_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "dewey_decimal": {
          "name": "dewey_decimal",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_subjects_name": {
          "name": "idx_subjects_name",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_subjects_parent": {
          "name": "idx_subjects_parent",
          "columns": [
            {
              "expression": "parent_subject_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"subjects\".\"parent_subject_id\" IS NOT NULL",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_subjects_dewey": {
          "name": "idx_subjects_dewey",
          "columns": [
            {
              "expression": "dewey_decimal",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"subjects\".\"dewey_decimal\" IS NOT NULL",
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "subjects_parent_subject_id_subjects_id_fk": {
          "name": "subjects_parent_subject_id_subjects_id_fk",
          "tableFrom": "subjects",
          "tableTo": "subjects",
          "columnsFrom": [
            "parent_subject_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "subjects_id_unique": {
          "name": "subjects_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        },
        "subjects_name_unique": {
          "name": "subjects_name_unique",
          "nullsNotDistinct": false,
          "columns": [
            "name"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {
        "chk_subjects_dewey": {
          "name": "chk_subjects_dewey",
          "value": "\"subjects\".\"dewey_decimal\" IS NULL OR \"subjects\".\"dewey_decimal\" ~ '^[0-9]{3}(\\.[0-9]+)?$'"
        }
      },
      "isRLSEnabled": false
    },
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "student_id": {
          "name": "student_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "full_name": {
          "name": "full_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "password": {
          "name": "password",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "department_id": {
          "name": "department_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "account_status": {
          "name": "account_status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'active'"
        },
        "max_books_allowed": {
          "name": "max_books_allowed",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 5
        },
        "max_days_allowed": {
          "name": "max_days_allowed",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 14
        },
        "enrollment_date": {
          "name": "enrollment_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "graduation_date": {
          "name": "graduation_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "is_deleted": {
          "name": "is_deleted",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        }
      },
      "indexes": {
        "idx_users_email": {
          "name": "idx_users_email",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_users_student_id": {
          "name": "idx_users_student_id",
          "columns": [
            {
              "expression": "student_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"users\".\"student_id\" IS NOT NULL",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_users_role_status": {
          "name": "idx_users_role_status",
          "columns": [
            {
              "expression": "role",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "account_status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_users_department": {
          "name": "idx_users_department",
          "columns": [
            {
              "expression": "department_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"users\".\"department_id\" IS NOT NULL",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_users_active": {
          "name": "idx_users_active",
          "columns": [
            {
              "expression": "id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"users\".\"account_status\" = 'active' AND \"users\".\"is_deleted\" = FALSE",
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "users_department_id_departments_id_fk": {
          "name": "users_department_id_departments_id_fk",
          "tableFrom": "users",
          "tableTo": "departments",
          "columnsFrom": [
            "department_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_id_unique": {
          "name": "users_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        },
        "users_student_id_unique": {
          "name": "users_student_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "student_id"
          ]
        },
        "users_email_unique": {
          "name": "users_email_unique",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {
        "chk_users_role": {
          "name": "chk_users_role",
          "value": "\"users\".\"role\" IN ('admin', 'librarian', 'faculty', 'student')"
        },
        "chk_users_account_status": {
          "name": "chk_users_account_status",
          "value": "\"users\".\"account_status\" IN ('active', 'inactive', 'suspended', 'graduated')"
        },
        "chk_users_email_format": {
          "name": "chk_users_email_format",
          "value": "\"users\".\"email\" ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+.[A-Za-z]{2,}$'"
        },
        "chk_users_phone_format": {
          "name": "chk_users_phone_format",
          "value": "\"users\".\"phone\" IS NULL OR \"users\".\"phone\" ~* '^+?[0-9s-()]{10,}$'"
        },
        "chk_users_student_id": {
          "name": "chk_users_student_id",
          "value": "\"users\".\"student_id\" IS NULL OR LENGTH(\"users\".\"student_id\") >= 5"
        },
        "chk_users_graduation_date": {
          "name": "chk_users_graduation_date",
          "value": "\"users\".\"graduation_date\" IS NULL OR \"users\".\"graduation_date\" >= \"users\".\"enrollment_date\""
        },
        "chk_users_max_books": {
          "name": "chk_users_max_books",
          "value": "\"users\".\"max_books_allowed\" > 0 AND \"users\".\"max_books_allowed\" <= 50"
        },
        "chk_users_max_days": {
          "name": "chk_users_max_days",
          "value": "\"users\".\"max_days_allowed\" > 0 AND \"users\".\"max_days_allowed\" <= 365"
        }
      },
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}